name: Build and Deploy FindaDoctor to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Set up Docker to use Minikube's environment
      - name: Set up Docker to use Minikube's environment
        run: |
          echo "Configuring Docker to use Minikube's daemon..."
          eval $(minikube docker-env)

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Debug directory structure
      - name: Debug - List directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Repository structure:"
          find . -type d -maxdepth 2

      # Step 6: Build and push Backend Docker image
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./FindaDoctor-BE-main
          push: true
          tags: your-dockerhub-username/findadoctor-backend:latest

      # Step 7: Build and push Frontend Docker image
      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./FindaDoctor-FE-main
          push: true
          tags: your-dockerhub-username/findadoctor-frontend:latest

      # Step 8: Deploy to Minikube
      - name: Deploy to Minikube
        run: |
          # Apply namespace and secrets
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          
          # Apply backend and frontend deployments and services
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml

      # Step 9: Verify deployment
      - name: Verify deployment
        run: |
          echo "Waiting for deployments to be ready..."
          kubectl rollout status deployment/findadoctor-backend
          kubectl rollout status deployment/findadoctor-frontend
          echo "Deployments are ready!"
          
          echo "Services:"
          kubectl get services
          
          echo "Access the frontend at:"
          minikube service findadoctor-frontend-service --url &
